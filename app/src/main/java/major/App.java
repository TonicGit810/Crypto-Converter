/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package major;
import javafx.application.Platform;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.Label;
import javafx.scene.layout.StackPane;
import javafx.scene.layout.VBox;
import major.model.*;
import major.view.AppWindow;
import javafx.application.Application;
import javafx.stage.Stage;
import major.view.SplashScreen;

import java.util.List;

/**
 *Class to run the program.
 */

public class App extends Application {



    private SplashScreen splashScreen = new SplashScreen();
    private int loadTime = 15;

    private CMCAPI input;
    private TwilioAPI output;

    private boolean language = false;

    /**
     *Main method
     * @param args the commandline arguments.
     */

    public static void main(String[] args) {
        launch(args);
    }
    /**
     *run program
     * @param primaryStage the main stage of the App
     */

    public void start(Stage primaryStage){





        Stage splash = splashScreen.getStage();
        splash.show();



        Thread load = new Thread(()->{        //Thread that sleeps every second and update the progress bar.
            for (int a =0 ; a<loadTime; a++){
                try {

                    Thread.sleep(1000);

                } catch (InterruptedException e) {
                    throw new RuntimeException(e);
                }
                splashScreen.increase();

            }
            Platform.runLater(new Runnable() {
                @Override
                public void run() {
                    splash.close();



                    Parameters params = getParameters();
                    List<String> list = params.getRaw();
                    System.out.println(list.size());
                    for(String each : list){
                        System.out.println(each);
                    }

                    String in = list.get(0);
                    String out = list.get(1);



                    if (in.equals("online")){

                        Http http = new Http();
                        input = new CMCInputOnline();
                        input.injectHttp(http);
                        input.injectSQL(new Sql());
                        if(out.equals("online")){
                            output = new TwilioOnline();
                            output.injectHttp(http);

                        }else{
                            output = new TwilioOffline();
                        }

                    }else{
                        Http http = new Http();
                        input = new CMCInputOffline();
                        if(out.equals("online")){
                            output = new TwilioOnline();
                            output.injectHttp(http);

                        }else{
                            output = new TwilioOffline();
                        }

                    }

                    Facade control = new Facade(input, output);
                    while (!language){                         //Language selection, must continue with language selected.


                        StackPane root = new StackPane();
                        root.prefHeight(50);
                        root.prefWidth(50);
                        ComboBox<String> box = new ComboBox<String>();

                        Label select = new Label("Please Select A Language To continue");


                        box.getItems().add("french");
                        box.getItems().add("english");

                        VBox vbox = new VBox();


                        Button confirm = new Button("Confirm");
                        Stage selectLanguage = new Stage();
                        selectLanguage.setTitle("Language");
                        selectLanguage.setWidth(300);
                        selectLanguage.setHeight(200);
                        confirm.setOnAction(event -> {
                            if(box.getValue() == null){
                                language =  false;
                            }else if(!box.getValue().isEmpty()){
                                control.setLanguage(box.getValue());
                                language = true;
                                selectLanguage.close();

                            }
                        });

                        vbox.getChildren().addAll(select,box,confirm);
                        vbox.setAlignment(Pos.CENTER);

                        root.getChildren().addAll(vbox);


                        Scene selectScene = new Scene(root);


                        selectLanguage.setScene(selectScene);
                        selectLanguage.showAndWait();
                    }







                    AppWindow view = new AppWindow(control);
                    primaryStage.setWidth(900);
                    primaryStage.setHeight(900);
                    primaryStage.setScene(view.getScene());
                    primaryStage.setTitle("Coin Market Cap");
                    primaryStage.show();
                }
            });
        });
        load.start();







    }
}
